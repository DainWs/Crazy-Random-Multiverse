@startuml
title "Design - Domain Dealer"
!theme plain

Interface DealStrategyFactory {
 +createStrategy(RoundCounter): DealStrategy
}

Interface DealStrategy {
 +dealFrom(Deck): List<Card>
}

Interface Deck {
 +getCommonWarrior(): Warrior
 +getUncommonWarrior(): Warrior
 +getRareWarrior(): Warrior
 +getEpicWarrior(): Warrior
 +getLegendaryWarrior(): Warrior
 +getMithicWarrior(): Warrior
 +getEquipment(): Equipment
 +getSpell(): Spell
}

Abstract Class CardBattleGame {
 +start(): void
 +checkForWinner(): void
 | muchos posibles metodos
 | sujeto a cambios
}

Class RoundCounter {
 -value: int
 +increase(): void
 +decrease(): void
 +reset(): void
 +getRound(): Integer
}

Class Dealer {
 +setStrategy(DealStrategy): void
 +dealTo(Player): void
}


CardBattleGame *--> RoundCounter
CardBattleGame *--> Dealer
CardBattleGame *--> DealStrategyFactory

DealStrategyFactory --> DealStrategy : Create
DealStrategy ..> Deck

Dealer o--> DealStrategy
Dealer *--> Deck
Dealer ..> Player

Deck --> Card

@enduml