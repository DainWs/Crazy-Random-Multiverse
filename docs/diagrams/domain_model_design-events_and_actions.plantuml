@startuml
title "Design - Domain Events and Actions"
!theme plain

Interface EventPublisher {
 +publish(Event): void
}

Interface Action {
 +execute(CardBattleGame): void
}

Abstract Class CardBattleGame {
 +start(): void
 +checkForWinner(): void
 | muchos posibles metodos
 | sujeto a cambios
}

Class AttackCombatantAction implements Action {}
Class CombatantDeadEvent extends Event {}

Action --> CardBattleGame   

CardBattleGame *--> EventPublisher
EventPublisher ..> Event

AttackCombatantAction ..> EventPublisher
AttackCombatantAction --> CombatantDeadEvent

@enduml